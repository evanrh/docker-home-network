services:

  # DNS and Adblocking
  pihole:
    image: pihole/pihole
    networks:
      pihole-dns:
      internal:
        ipv4_address: 10.8.1.2
    ports:
      - 53:53/tcp
      - 53:53/udp
    environment:
      DHCP_ACTIVE: false
      DHCP_IPV6: false
      DNSSEC: true
      DNSMASQ_LISTENING: all
      PIHOLE_DNS_: unbound#53
      WEBPASSWORD: ${PIHOLE_PASS:-admin}
      TEMPERATUREUNIT: f
      TZ: America/New_York
    volumes:
      - ./data/pihole:/etc/pihole
      - ./data/dnsmasq.d:/etc/dnsmasq.d
    depends_on:
      - unbound
      - traefik
    labels:
      traefik.enable: true
      traefik.http.routers.pihole.rule: Host(`pihole.${HOST}`)
      traefik.http.routers.pihole.entrypoints: web-secure
      traefik.http.routers.pihole.tls:
      traefik.http.services.pihole.loadbalancer.server.port: 80
    restart: unless-stopped

  # Recursive DNS Resolution
  unbound:
    image: mvance/unbound-rpi
    networks:
      - pihole-dns
    restart: unless-stopped
    volumes:
      - ./config/unbound.conf:/opt/unbound/etc/unbound.conf

  # Reverse proxy
  traefik:
    image: traefik
    networks:
      internal:
        ipv4_address: 10.8.1.1
    ports:
      - 80:80
      - 8080:8080
      - 443:443
    volumes:
      - ./config/traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    restart: unless-stopped

  # Smoke test container
  whoami:
    image: traefik/whoami
    restart: unless-stopped
    networks:
      - internal
    labels:
      traefik.enable: true
      traefik.http.routers.whoami.rule: Host(`whoami.${HOST}`)
      traefik.http.routers.whoami.entrypoints: web-secure
      traefik.http.routers.whoami.tls:
  
  # Monitoring
  uptime-kuma:
    image: louislam/uptime-kuma:1-alpine
    container_name: uptime-kuma
    networks:
      - internal
    volumes:
      - ./data/uptime-kuma:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      traefik.enable: true
      traefik.http.routers.uptime-kuma.rule: Host(`monitor.${HOST}`)
      traefik.http.services.uptime-kuma.loadbalancer.server.port: 3001
      traefik.http.routers.uptime-kuma.entrypoints: web-secure
      traefik.http.routers.uptime-kuma.tls:

  # Wireguard VPN
  wg-easy:
    image: weejewel/wg-easy
    container_name: wg-easy
    networks:
      internal:
        ipv4_address: 10.8.1.3
    volumes:
      - ./data/wg-easy:/etc/wireguard
    environment:
      WG_HOST: ${HOST}
      WG_DEFAULT_DNS: 10.8.1.2
      PASSWORD: ${WG_PASS}
    ports:
      - 51820:51820/udp
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    labels:
      traefik.enable: true
      traefik.http.routers.wg-easy.rule: Host(`vpn.${HOST}`)
      traefik.http.services.wg-easy.loadbalancer.server.port: 51821
      traefik.http.routers.wg-easy.entrypoints: web-secure
      traefik.http.routers.wg-easy.tls:

  finances:
    image: actualbudget/actual-server:latest-alpine
    container_name: finance_manager
    networks:
      internal:
        ipv4_address: 10.8.1.4
    volumes:
      - ./data/finances:/data
    labels:
      traefik.enable: true
      traefik.http.routers.finances.rule: Host(`finances.${HOST}`)
      traefik.http.services.finances.loadbalancer.server.port: 5006
      traefik.http.routers.finances.entrypoints: web-secure
      traefik.http.routers.finances.tls: true
      traefik.http.routers.finances.tls.certresolver: main
networks:
  pihole-dns:
    name: pihole-dns
  internal:
    name: internal
    ipam:
      config:
        - subnet: 10.8.1.0/24
          ip_range: 10.8.1.16/28
volumes:
  uptime-kuma:
